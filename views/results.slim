- if @nphmmer_results.empty?
  p  No neuropeptides pecursors were identified.
- else
  - index = 0
  - @nphmmer_results.each do |result|
    - result.each do |seq|
      - index += 1
      .card
        .card-content
          span.card-title.id
            | Potential NP #{index + 1}: #{seq.id}
          ul.np_collapsible.collapsible data-collapsible="expandable" 
            - seq.hmmer_results.each_with_index do |data, i|
              li class=(i == 0 ? 'active' : '')
                .collapsible-header
                  = "Hit #{i + 1}: "
                  span.model_name
                    = data[:model].gsub(/.fa$/, '').gsub('-', ' ')
                  span.badge.evalue
                    == 'Sequence E-value: ' + NpHMMer::HighlightSequence.format_evalue(data[:overall_results][:full_seq_e_value])
                .collapsible-body style=(i == 0 ? 'display:block' : '')
                  p.sequence
                    span.id
                      == '>' + seq.def_line
                    br
                    span.seq
                      - formated_seq = NpHMMer::HighlightSequence.format_seqs(seq, data)
                      == formated_seq
                  ul.np_inner_collapsible.collapsible data-collapsible="accordion"
                    li
                      .more_info_btn.collapsible-header.light-blue.waves-effect.waves-light.btn.right
                        | View More Information
                      .clearfix
                      .more_info_body.collapsible-body
                        - if NpHMMer.opt[:type] == :genetic
                          .section
                            .more_info_header.blue-text.text-darken-2
                              | Full Translated Sequence
                            p.sequence
                              span.translated_id
                                == '>' + seq.def_line + ' [Frame: ' + seq.frame.to_s + ']' 
                              br
                              span.translated_seq
                                == NpHMMer::HighlightSequence.format_translated_seqs(seq.translated_seq, formated_seq)
                        .section
                          .col.s12
                            .more_info_header.blue-text.text-darken-2
                              | Overall Sequence
                            table.vertical-table
                              thead
                                tr
                                  th data-field="Evalue"  E-Value
                                  th data-field="Score"  Score
                                  th data-field="Bias"  Bias
                              tbody
                                tr
                                  td
                                    == "#{NpHMMer::HighlightSequence.format_evalue(data[:overall_results][:full_seq_e_value])}"
                                  td
                                    |  #{data[:overall_results][:full_seq_score]}
                                  td
                                    |  #{data[:overall_results][:full_seq_bias]} 
                            - if ! seq.signalp.nil? && ! NpHMMer.opt[:signalp_path].nil?
                              - cardclass = (seq.signalp[:sp] == 'Y') ? 'sp_present' : 'no_sp_present'
                              .col.s12 class=cardclass
                                .more_info_header.blue-text.text-darken-2
                                  | Signal Peptide Analysis
                                table.vertical-table
                                  thead
                                    tr
                                      th data-field="Signalp_present"  Signal Peptide Present?
                                      th data-field="d-value"
                                        | D-Value [Cut-off: #{seq.signalp[:dmaxcut]}]
                                      th data-field="Cleavage_site_position"  Cleavage Site Position
                                  tbody
                                    tr
                                      - if seq.signalp[:sp] == 'Y'
                                        td  Yes
                                      - else 
                                        td No
                                      td 
                                        = seq.signalp[:d]
                                      td
                                        = "#{seq.signalp[:ymax_pos].to_i - 1 }:#{seq.signalp[:ymax_pos]}"
                        .section
                          .domains_section_header.more_info_header.blue-text.text-darken-2 
                            | Domains 
                          - if data[:domains][0].is_a? String
                            p
                              = data[:domains][0]
                          - else
                            table.domains
                              tbody
                                - data[:domains].each_with_index do |dom, idx|
                                  tr
                                    td
                                      | #{idx + 1}.
                                    td style=("width: 100%;") 
                                      .domain 
                                        table.domain_stats
                                          thead
                                            tr
                                              th data-field="c-Evalue"  Conditional E-Value
                                              th data-field="i-Evalue"  Independent E-Value
                                              th data-field="Score"  Score
                                              th data-field="Bias"  Bias
                                              th data-field="Seq Coordinate"  Sequence Coordinates
                                              th data-field="Model Coordinate"  NP Model Coordinates
                                          tbody
                                            tr
                                              td 
                                                == NpHMMer::HighlightSequence.format_evalue(dom[:data][:c_e_value])
                                              td 
                                                == NpHMMer::HighlightSequence.format_evalue(dom[:data][:i_e_value])
                                              td 
                                                = dom[:data][:score]
                                              td
                                                = dom[:data][:bias]
                                              td
                                                = dom[:data][:ali_from] + ' : ' + dom[:data][:ali_to]
                                              td
                                                = dom[:data][:hmm_from] + ' : ' + dom[:data][:hmm_to]
                                        .alignment
                                          p
                                            - NpHMMer::HighlightSequence.format_domain_alignments(dom).each do |domain|
                                              == domain.join('<br>').gsub(' ', '&nbsp;').gsub(/KR|KK|RR/i, '<span class=clv>\0</span>') + "<br><br>" 
                  .clearfix
